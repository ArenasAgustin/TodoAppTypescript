{"version":3,"sources":["components/Nav/Nav.tsx","components/Todo/Todo.tsx","components/Todos/Todos.tsx","components/Home/Home.tsx","actions/actions.tsx","components/AddTodo/AddTodo.tsx","components/TodoDetail/TodoDetail.tsx","App.tsx","reducer/reducer.tsx","store/store.tsx","index.tsx"],"names":["Nav","className","to","Todo","title","Todos","status","auxTodoList","useSelector","state","filter","todo","map","tD","id","statusList","Home","i","ADD_TODO","REMOVE_TODO","TODO_PROGRESS","TODO_DONE","addTodo","date","place","description","type","payload","removeTodo","todoInProgress","todoDone","actions","AddTodo","dispatch","useDispatch","React","useState","input","setInput","handleInputChange","e","target","name","value","onSubmit","event","preventDefault","handleSubmit","onChange","TodoDetail","detailItem","todoList","todoDetail","setTodoDetail","useParams","useEffect","find","toString","onClick","auxTodo","done","progress","remove","App","exact","path","render","stateAux","todos","actionCosnt","length","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.864d121c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link className=\"link\" to=\"/TodoAppTypescript/\">\r\n        <span>TODOS</span>\r\n      </Link>\r\n\r\n      <Link className=\"link\" to=\"/TodoAppTypescript/add\">\r\n        <span>Add Todo</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport type { propsTodo } from \"../../interfaces/interfacesObjets\";\r\n\r\nexport function Todo({ title }: propsTodo) {\r\n  return <div>{title}</div>;\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport TodoCard from \"../Todo/Todo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport type { Todo, todoStatus } from \"../../interfaces/interfacesObjets\";\r\nimport \"./Todos.css\";\r\n\r\nexport function Todos({ status }: todoStatus) {\r\n  const todoList = useSelector((state: Todo[]): Todo[] => state);\r\n  let auxTodoList = todoList.filter((todo) => todo.status === status);\r\n\r\n  return (\r\n    <div className=\"carTodos\">\r\n      <span className=\"titulos\">{status}</span>\r\n      {auxTodoList.map((tD: Todo) => (\r\n        <Link className=\"tarea\" to={`/TodoAppTypescript/edit/${tD.id}`} key={tD.id}>\r\n          <TodoCard title={tD.title} />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport Todos from \"../Todos/Todos\";\r\nimport type { todoStatus } from \"../../interfaces/interfacesObjets\";\r\nimport \"./Home.css\";\r\n\r\nlet statusList: todoStatus[] = [\r\n  { status: \"Todo\" },\r\n  { status: \"InProgress\" },\r\n  { status: \"Done\" },\r\n];\r\n\r\nexport function Home(): JSX.Element {\r\n  return (\r\n    <div className=\"TodoCards\">\r\n      {statusList.map(({ status }: todoStatus, i: number) => {\r\n        return <Todos status={status} key={i} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import type { Todo, Action } from \"../interfaces/interfacesObjets\";\r\n\r\nlet todoId: number = 1;\r\n\r\nconst ADD_TODO: string = \"ADD_TODO\";\r\nconst REMOVE_TODO: string = \"REMOVE_TODO\";\r\nconst TODO_PROGRESS: string = \"TODO_PROGRESS\";\r\nconst TODO_DONE: string = \"TODO_DONE\";\r\n\r\nfunction addTodo({\r\n  title,\r\n  id = todoId,\r\n  status = \"Todo\",\r\n  date,\r\n  place,\r\n  description,\r\n}: Todo): Action {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: {\r\n      title,\r\n      id,\r\n      status,\r\n      date,\r\n      place,\r\n      description,\r\n    },\r\n  };\r\n}\r\n\r\nfunction removeTodo({ id }: Todo): Action {\r\n  return {\r\n    type: REMOVE_TODO,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nfunction todoInProgress({ id }: Todo): Action {\r\n  return {\r\n    type: TODO_PROGRESS,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nfunction todoDone({ id }: Todo): Action {\r\n  return {\r\n    type: TODO_DONE,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nexport default {\r\n  addTodo,\r\n  ADD_TODO,\r\n  removeTodo,\r\n  REMOVE_TODO,\r\n  todoInProgress,\r\n  TODO_PROGRESS,\r\n  todoDone,\r\n  TODO_DONE,\r\n};\r\n","import React, { ChangeEvent, FormEvent } from \"react\";\r\nimport actions from \"../../actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport type { Todo } from \"../../interfaces/interfacesObjets\";\r\nimport \"./AddTodo.css\";\r\n\r\nconst { addTodo } = actions;\r\n\r\n// Nota 1: Para utilizar el hook `useState` para el manejo de estados de los inputs, tendras que utilizarlo de la siguiente manera\r\n//React.useState\r\n\r\n// Nota 2: En este componente tendras que usar la funcion `connect` de react-redux para conectarte al store.\r\n// Si usas el hook `useDispatch` no funcionaran los test.\r\n\r\nexport default function AddTodo() {\r\n  const dispatch = useDispatch();\r\n  const Input: Todo = {\r\n    title: \"\",\r\n    description: \"\",\r\n    place: \"\",\r\n    date: \"\",\r\n  };\r\n\r\n  const [input, setInput] = React.useState(Input);\r\n\r\n  const handleSubmit = function (event: FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n    dispatch(addTodo(input));\r\n    setInput({\r\n      title: \"\",\r\n      description: \"\",\r\n      place: \"\",\r\n      date: \"\",\r\n    });\r\n  };\r\n\r\n  const handleInputChange = function (\r\n    e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>\r\n  ): void {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={(event) => handleSubmit(event)}>\r\n      <div className=\"divInput\">\r\n        <label className=\"titulo\">Title</label>\r\n        <input\r\n          name=\"title\"\r\n          onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange(e)}\r\n          value={input.title}\r\n          className=\"input\"\r\n        ></input>\r\n      </div>\r\n\r\n      <div className=\"divInput\">\r\n        <label className=\"titulo\">Description</label>\r\n        <textarea\r\n          name=\"description\"\r\n          onChange={(e: ChangeEvent<HTMLTextAreaElement>) =>\r\n            handleInputChange(e)\r\n          }\r\n          value={input.description}\r\n          className=\"input\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div className=\"divInput\">\r\n        <label className=\"titulo\">Place</label>\r\n        <input\r\n          name=\"place\"\r\n          onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange(e)}\r\n          value={input.place}\r\n          className=\"input\"\r\n        ></input>\r\n      </div>\r\n\r\n      <div className=\"divInput\">\r\n        <label className=\"titulo\">Date</label>\r\n        <input\r\n          name=\"date\"\r\n          onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange(e)}\r\n          value={input.date}\r\n          className=\"input\"\r\n        ></input>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport actions from \"../../actions/actions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport type { Todo } from \"../../interfaces/interfacesObjets\";\r\nimport \"./TodoDetail.css\";\r\n\r\nexport function TodoDetail() {\r\n  const todoList = useSelector((state: Todo[]): Todo[] => state);\r\n  const dispatch = useDispatch();\r\n  let detailItem: Todo | undefined;\r\n  const [todoDetail, setTodoDetail] = useState(detailItem);\r\n  const { id }: { id: string } = useParams();\r\n\r\n  useEffect(() => {\r\n    detailItem = todoList.find(\r\n      (todo: Todo): boolean =>\r\n        typeof todo.id === \"number\" && todo.id.toString() === id\r\n    );\r\n    setTodoDetail(detailItem);\r\n  });\r\n\r\n  const remove = (id: number | undefined): void => {\r\n    let auxTodo: Todo = { id };\r\n    dispatch(actions.removeTodo(auxTodo));\r\n  };\r\n\r\n  const progress = (id: number | undefined): void => {\r\n    let auxTodo: Todo = { id };\r\n    dispatch(actions.todoInProgress(auxTodo));\r\n  };\r\n\r\n  const done = (id: number | undefined): void => {\r\n    let auxTodo: Todo = { id };\r\n    dispatch(actions.todoDone(auxTodo));\r\n  };\r\n\r\n  return (\r\n    <div className=\"divDetail\">\r\n      <div className=\"divText\">\r\n        <label className=\"detalle\">ToDo: </label>\r\n        <span className=\"textos\">{todoDetail?.title}</span>\r\n      </div>\r\n\r\n      <div className=\"divText\">\r\n        <label className=\"detalle\">Description:</label>\r\n        <span className=\"textos\">{todoDetail?.description}</span>\r\n      </div>\r\n\r\n      <div className=\"divText\">\r\n        <label className=\"detalle\">Place:</label>\r\n        <span className=\"textos\">{todoDetail?.place}</span>\r\n      </div>\r\n\r\n      <div className=\"divText\">\r\n        <label className=\"detalle\">Date:</label>\r\n        <span className=\"textos\">{todoDetail?.date}</span>\r\n      </div>\r\n\r\n      <div className=\"btns\">\r\n        <Link to=\"/TodoAppTypescript/\">\r\n          <button onClick={() => done(todoDetail?.id)} className=\"detalleBtn\">\r\n            DONE\r\n          </button>\r\n        </Link>\r\n\r\n        <Link to=\"/TodoAppTypescript/\">\r\n          <button\r\n            onClick={() => progress(todoDetail?.id)}\r\n            className=\"detalleBtn\"\r\n          >\r\n            IN PROGRESS\r\n          </button>\r\n        </Link>\r\n\r\n        <Link to=\"/TodoAppTypescript/\">\r\n          <button onClick={() => remove(todoDetail?.id)} className=\"detalleBtn\">\r\n            DELETE\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoDetail;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Home from \"./components/Home/Home\";\r\nimport AddTodo from \"./components/AddTodo/AddTodo\";\r\nimport TodoDetail from \"./components/TodoDetail/TodoDetail\";\r\n\r\n// En este componente deberias cargar tus rutas.\r\nexport function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n\r\n      <Route exact path=\"/TodoAppTypescript/\" render={() => <Home />} />\r\n\r\n      <Route path=\"/TodoAppTypescript/add\" render={() => <AddTodo />} />\r\n\r\n      <Route path=\"/TodoAppTypescript/edit/:id\" render={() => <TodoDetail />} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import type { Todo, Action } from \"../interfaces/interfacesObjets\";\r\nimport actionCosnt from \"../actions/actions\";\r\n\r\nconst todoList: Todo[] = [];\r\nlet stateAux: Todo[] = [];\r\n\r\n//En nuestro estado guardaremos objetos con `todos`. Cada todo tendra: title, description, place, date, id y un status;\r\nconst todos = (state = todoList, { type, payload }: Action) => {\r\n  switch (type) {\r\n    case actionCosnt.ADD_TODO:\r\n      payload.id = state.length + 1;\r\n      return (state = [...state, ...[payload]]);\r\n\r\n    case actionCosnt.REMOVE_TODO:\r\n      return (state = state.filter((todo) => todo.id !== payload.id));\r\n\r\n    case actionCosnt.TODO_PROGRESS:\r\n      stateAux = state;\r\n      for (let i = 0; i < stateAux.length; i++) {\r\n        if (stateAux[i].id === payload.id) stateAux[i].status = \"InProgress\";\r\n      }\r\n      return (state = stateAux);\r\n\r\n    case actionCosnt.TODO_DONE:\r\n      stateAux = state;\r\n      for (let i = 0; i < stateAux.length; i++) {\r\n        if (stateAux[i].id === payload.id) stateAux[i].status = \"Done\";\r\n      }\r\n      return (state = stateAux);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducer/reducer\";\r\n\r\n//   export const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   );\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}